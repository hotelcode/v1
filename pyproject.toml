# path: pyproject.toml
[tool.poetry]
name = "hotel-ai-reception"
version = "0.1.0"
description = "AI-powered hotel reception system"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"
readme = "README.md"
python = "^3.12.3"

[tool.poetry.dependencies]
python = "^3.12.3"
fastapi = "^0.110.0"
uvicorn = {extras = ["standard"], version = "^0.29.0"}
pydantic = "^2.7.0"
pydantic-settings = "^2.2.0"
sqlalchemy = "^2.0.30"
asyncpg = "^0.29.0"
alembic = "^1.13.0"
redis = "^5.0.0"
httpx = "^0.27.0"
python-multipart = "^0.0.9"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-telegram-bot = "^21.0"
apscheduler = "^3.10.0"
pendulum = "^3.0.0"
opentelemetry-api = "^1.24.0"
opentelemetry-sdk = "^1.24.0"
opentelemetry-instrumentation-fastapi = "^0.45b0"
opentelemetry-instrumentation-sqlalchemy = "^0.45b0"
opentelemetry-exporter-otlp = "^1.24.0"
prometheus-client = "^0.20.0"
structlog = "^24.1.0"
email-validator = "^2.1.0"
websockets = "^12.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.0"
pytest-asyncio = "^0.23.0"
pytest-cov = "^5.0.0"
pytest-env = "^1.1.0"
pytest-mock = "^3.14.0"
black = "^24.3.0"
ruff = "^0.3.0"
mypy = "^1.9.0"
isort = "^5.13.0"
bandit = "^1.7.0"
safety = "^3.1.0"
pre-commit = "^3.7.0"
types-redis = "^4.6.0"
types-passlib = "^1.7.0"
httpx = "^0.27.0"
faker = "^24.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py312"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []
fixable = ["ALL"]
unfixable = []

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
no_implicit_reexport = true
namespace_packages = true
show_error_codes = true
show_column_numbers = true
pretty = true

[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["backend"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --cov=backend --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
pythonpath = ["."]
asyncio_mode = "auto"
markers = [
    "light: marks tests as light (fast, no external dependencies)",
    "heavy: marks tests as heavy (slow, requires external services)",
]

[tool.coverage.run]
source = ["backend"]
omit = ["*/tests/*", "*/migrations/*"]

[tool.coverage.report]
precision = 2
skip_empty = true
show_missing = true