# path: Caddyfile
{
    email {$CADDY_EMAIL}
    admin off
}

{$CADDY_DOMAIN:localhost} {
    # Enable compression
    encode gzip zstd

    # Security headers
    header {
        X-Content-Type-Options "nosniff"
        X-Frame-Options "DENY"
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "strict-origin-when-cross-origin"
        Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self' wss:"
        -Server
    }

    # Rate limiting
    @api_limit {
        path /api/*
    }
    rate_limit @api_limit {
        zone api_zone {
            key {remote_host}
            events 60
            window 1m
        }
    }

    # WebSocket handling
    @websocket {
        header Connection *Upgrade*
        header Upgrade websocket
    }
    handle @websocket {
        reverse_proxy app:8000 {
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
        }
    }

    # Health check endpoint
    handle /healthz {
        reverse_proxy app:8000 {
            health_uri /healthz
            health_interval 10s
            health_timeout 5s
        }
    }

    # API endpoints
    handle /api/* {
        reverse_proxy app:8000 {
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
            header_up X-Request-ID {uuid}
            
            # Circuit breaker
            lb_policy round_robin
            lb_try_duration 30s
            
            # Timeouts
            transport http {
                dial_timeout 10s
                response_header_timeout 10s
                read_timeout 30s
                write_timeout 30s
            }
        }
    }

    # Chat WebSocket endpoint
    handle /chat {
        reverse_proxy app:8000 {
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
            header_up X-Request-ID {uuid}
        }
    }

    # Metrics endpoint (internal only)
    handle /metrics {
        @internal {
            remote_ip 172.16.0.0/12 10.0.0.0/8 127.0.0.1
        }
        respond @internal 403
        reverse_proxy app:8000
    }

    # Static files and root
    handle {
        reverse_proxy app:8000 {
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
            header_up X-Request-ID {uuid}
        }
    }

    # Logging
    log {
        output stdout
        format json {
            time_format iso8601
        }
        level INFO
    }
}